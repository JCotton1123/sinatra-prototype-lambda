---
AWSTemplateFormatVersion: 2010-09-09

Transform: "AWS::Serverless-2016-10-31"

Resources:
  Function:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Ref AWS::StackName
      Handler: lambda.handler
      Runtime: ruby2.5
      CodeUri: "./"
      MemorySize: 512
      Timeout: 30
      Environment:
        Variables:
          PROJECT_ID: !Ref AWS::StackName
      Events:
        Application:
            Type: Api
            Properties:
                Path: /
                Method: ANY
                RestApiId: !Ref Application

  Application:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Ref AWS::StackName
      StageName: app 
      DefinitionBody:
        swagger: "2.0"
        basePath: "/app"
        info:
          title: !Ref AWS::StackName
        paths:
          /{proxy+}:
            x-amazon-apigateway-any-method:
              responses: {}
              x-amazon-apigateway-integration:
                uri:
                  !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${Function.Arn}/invocations"
                passthroughBehavior: "when_no_match"
                httpMethod: POST
                type: "aws_proxy"
          /:
            get:
              responses: {}
              x-amazon-apigateway-integration:
                uri:
                  !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${Function.Arn}/invocations"
                passthroughBehavior: "when_no_match"
                httpMethod: POST
                type: "aws_proxy"

  ConfigLambdaPermission:
    Type: "AWS::Lambda::Permission"
    DependsOn:
      - Function
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref Function
      Principal: apigateway.amazonaws.com

Outputs:
  Url:
    Value: !Sub "https://${Application}.execute-api.${AWS::Region}.amazonaws.com/app/"
